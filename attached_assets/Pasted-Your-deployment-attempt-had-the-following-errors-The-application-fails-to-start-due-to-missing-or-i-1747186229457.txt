Your deployment attempt had the following errors:
The application fails to start due to missing or inaccessible Python environment initialization in server/index.ts
The deployment is unable to complete health checks within the required timeframe
Python scripts in tmp/ directory may be causing initialization failures
Assistant suggestions
  // Initialize Python environment for screeners
  try {
    const { initPythonEnvironment } = await import('./pythonExecutionService');
    log('Initializing Python environment for screeners...');
    await initPythonEnvironment().catch(err => {
      log(`Warning: Python environment initialization rejected: ${err instanceof Error ? err.message : String(err)}`);
    });
    log('Python environment initialized successfully');
  } catch (error) {
    log(`Warning: Failed to initialize Python environment: ${error instanceof Error ? error.message : String(error)}`);
    log('Stock screeners requiring Python may not work properly');
  }
  // Initialize Python environment for screeners
  try {
    const { initPythonEnvironment } = await import('./pythonExecutionService');
    log('Initializing Python environment for screeners...');
    try {
      await initPythonEnvironment();
      log('Python environment initialized successfully');
    } catch (err) {
      log(`Warning: Python environment initialization rejected: ${err instanceof Error ? err.message : String(err)}`);
      log('Continuing with limited Python functionality');
    }
  } catch (error) {
    log(`Warning: Failed to import Python execution service: ${error instanceof Error ? error.message : String(error)}`);
    log('Continuing without Python screener functionality');
  }
  // Use port 5000 consistently for both development and production
  // Port 5000 is forwarded to port 80 in production
  const port = process.env.PORT || 5000;
  server.listen({
    port: Number(port),
    host: "0.0.0.0",
  }, () => {
    log(`serving on port ${port}`);
  });
  // Use port 3000 for production (forwarded to port 80) and 5000 for development
  const port = process.env.PORT || 3000;
  server.listen({
    port: Number(port),
    host: "0.0.0.0",
  }, () => {
    log(`serving on port ${port}`);
  });
[[ports]]
localPort = 3000
externalPort = 80
[env]
REPLIT_DISABLE_PACKAGE_LAYER = "1"